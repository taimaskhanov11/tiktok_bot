import re
from pprint import pprint

from aiogram.types import InlineKeyboardMarkup
from loguru import logger

from tiktok_bot.apps.bot.callback_data.base_callback import ChatCallback, SponsorChatCallback
from tiktok_bot.apps.bot.markups.utils import get_inline_keyboard, get_inline_url_keyboard

admin_back_buttons = ("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "admin")


def admin_start():
    keyword = [
        (("üìÑ –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.", ChatCallback(pk=0, action="view").pack()),),
        (("‚úç –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.", ChatCallback(pk=0, action="new").pack()),),
        (("üìÑ –°–ø–∏—Å–æ–∫ —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏—Ö –∫–∞–Ω–∞–ª–æ–≤.", SponsorChatCallback(pk=0, action="view").pack()),),
        (("‚úç –î–æ–±–∞–≤–∏—Ç—å —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–π –∫–∞–Ω–∞–ª.", SponsorChatCallback(pk=0, action="new").pack()),),

        (("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.", "statistics"),),
        (("üîñ –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É.", "send_mail"),),
        (("‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞.", "bot_settings"),),
        (("üë• –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.", "export_users"),),
        # (("üìã –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", "start_message"),),
    ]

    return get_inline_keyboard(keyword)


def admin_button():
    keyboard = [
        (("–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", "admin"),),
    ]
    return get_inline_keyboard(keyboard)


def back():
    keyboard = [
        [admin_back_buttons]
    ]
    return get_inline_keyboard(keyboard)


def export_users():
    keyboard = [
        (("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ–º", "test"),),
        (("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª", "txt"),),
        (("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ–º", "test"),),
    ]
    return get_inline_keyboard(keyboard)


def export_users_send_type():
    keyboard = [
        (("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ–º", "text"),),
        (("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª", "txt"),),
        (("–û—Ç–ø—Ä–∞–≤–∏—Ç—å json-file", "json"),),
        [admin_back_buttons]
    ]
    return get_inline_keyboard(keyboard)


def start_message():
    keyboard = [
        (("–ò–∑–º–µ–Ω–∏—Ç—å", "edit_start_message"),),
    ]
    return get_inline_keyboard(keyboard)


def send_mail_preview():
    keyboard = [
        (("‚ûï –î–æ–±–∞–≤–∏—Ç—å url –∫–Ω–æ–ø–∫–∏", "add_button"),),
        (("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "accept"),),
        (("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "admin"),),
        # (("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "cancel"),),
    ]
    return get_inline_keyboard(keyboard)


def send_mail_done(status: bool = True):
    keyboard = [
        (("‚è∏ –ü–∞—É–∑–∞", "pause_mail"),) if status else (("‚ñ∂Ô∏è –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å", "continue_mail"),),
        (("‚èπ –°—Ç–æ–ø", "stop_mail"),),
    ]
    return get_inline_keyboard(keyboard)


@logger.catch
def parse_buttons(text: str):
    keyboard = []
    # change_keyboard = re.split(r'\s\n|\w\n|$', text)[:-1]
    # change_keyboard = re.split(r'[(\s)\w](\n)', text)[:-1]
    # change_keyboard = re.split(r'\s\n|[^|]\n', text)
    change_keyboard = re.split(r'(?<=\w\n)', text)
    # pprint(change_keyboard)
    for but_parent in change_keyboard:
        keyboard.append(
            list(map(lambda x: list(map(lambda x: x.strip(), x.split('-'))), but_parent.split("|\n")))
        )
    return keyboard
    # return get_inline_url_keyboard(keyboard)
    # data = re.findall(r"(\bwall|\bphoto)(-?\d+_\d+)", i)


def send_mail_add_button(text: str) -> InlineKeyboardMarkup:
    keyboard = [
        # (("‚ûï –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ url –∫–Ω–æ–ø–∫–∏", "add_button"),),
        (("‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π url –∫–Ω–æ–ø–∫–∏", "add_button"),),
        (("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "accept"),),
        (("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "cancel"),),
    ]
    inline_keyboard = get_inline_keyboard(keyboard)
    inline_url_keyboard = get_inline_url_keyboard(parse_buttons(text))
    inline_url_keyboard.inline_keyboard.extend(inline_keyboard.inline_keyboard)
    return inline_url_keyboard


def send_mail_add_button_in_current(markup: InlineKeyboardMarkup) -> InlineKeyboardMarkup:
    keyboard = [
        # (("‚ûï –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ url –∫–Ω–æ–ø–∫–∏", "add_button"),),
        (("‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π url –∫–Ω–æ–ø–∫–∏", "add_button"),),
        (("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "accept"),),
        (("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "cancel"),),
    ]

    inline_keyboard = get_inline_keyboard(keyboard)
    new_markup = markup.copy()
    new_markup.inline_keyboard.extend(inline_keyboard.inline_keyboard)
    return markup


if __name__ == '__main__':
    text = ("–ö–Ω–æ–ø–∫–∞ 1 - https://www.example1.com |\n"
            "–ö–Ω–æ–ø–∫–∞ 2 - https://www.example2.com\n"
            "–ö–Ω–æ–ø–∫–∞ 3 - https://www.example3.com\n"
            "–ö–Ω–æ–ø–∫–∞ 4 - https://www.example4.com")
    # pprint(send_mail_preview().inline_keyboard)
    pprint(parse_buttons(text))
    # print(send_mail_add_button(text))
    # parse_buttons("–ö–Ω–æ–ø–∫–∞ 1 - https://www.example1.com,\n"
    #               "–ö–Ω–æ–ø–∫–∞ 2 - https://www.example2.com,\n"
    #               "–ö–Ω–æ–ø–∫–∞ 3 - https://www.example3.com|\n"
    #               "–ö–Ω–æ–ø–∫–∞ 4 - https://www.example4.com\n")
